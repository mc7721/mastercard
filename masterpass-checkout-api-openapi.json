{
    "openapi": "3.0.0",
    "info": {
        "version": "2.1.0",
        "title": "Masterpass Checkout API",
        "description": "The Masterpass v7 Checkout API provides checkout services for all Masterpass Wallets. This API can be used by Merchants and PSPs",
        "termsOfService": "https:\/\/developer.mastercard.com\/page\/terms-of-use"
    },
    "servers": [
        "https:\/\/api.mastercard.com\/",
        "https:\/\/sandbox.api.mastercard.com\/"
    ],
    "paths": {
        "\/masterpass\/paymentdata\/{transactionId}": {
            "get": {
                "summary": "Payment Data Service",
                "description": "Use this service to retrieve the consumer's payment card, and shipping details from Masterpass. New or existing Brazil merchants looking for the house number and street name as separate fields should leverage these two additional extension points in their Masterpass checkout integration. Line 4 will provide the house number and line 5 will provide the street name. Brazil merchants should first look for data in lines 4 and 5, and in the case that no data is found there, merchants should then look",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "description": "Identifies the transaction for which to return the consumer?s payment data. This is the oauth_verifier value sent by Masterpass in the callback URL after the Masterpass UI is closed."
                    },
                    {
                        "name": "checkoutId",
                        "in": "query",
                        "description": "This is a unique, 32-character alphanumeric identifier generated by Masterpass, which identifies your settings during a checkout.  You can find this value in your Mastercard Developers account."
                    },
                    {
                        "name": "cartId",
                        "in": "query",
                        "description": "This is a merchant Cart identifier."
                    },
                    {
                        "name": "pspId",
                        "in": "query",
                        "description": "This is the pspId passed by the merchant to select the PSP to which data should be pushed. The value for this parameter is the ID value in the Business Profile section of the Merchant's account in the Masterpass portal. Note this parameter is only used for the PSP Push model."
                    },
                    {
                        "name": "externalData",
                        "in": "query",
                        "description": "Additional private data to be sent to the PSP along with this transaction's data during Payment Processing. This parameter can only be used with the PSP Push Model. See [Receiving Additional Merchant Data](https:\/\/developer.mastercard.com\/documentation\/masterpass-integration-psp\/v7-Service-Providers#receiving-additional-merchant-data) for more information)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is a PaymentData response."
                    }
                }
            }
        },
        "\/masterpass\/encrypted-paymentdata\/{transactionId}": {
            "get": {
                "summary": "Encrypted Payment Data Service",
                "description": "Use this service to retrieve the encrypted consumer's payment card, and shipping details from Masterpass. API URL: \/masterpass\/encrypted-paymentdata\/{transactionId}\n",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "description": "Identifies the transaction for which to return the consumer?s payment data. This is the oauth_verifier value sent by Masterpass in the callback URL after the Masterpass UI is closed."
                    },
                    {
                        "name": "checkoutId",
                        "in": "query",
                        "description": "This is a unique, 32-character alphanumeric identifier generated by Masterpass, which identifies your settings during a checkout.  You can find this value in your Mastercard Developers account."
                    },
                    {
                        "name": "cartId",
                        "in": "query",
                        "description": "This is a merchant Cart identifier."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is a PaymentData response."
                    }
                }
            }
        },
        "\/masterpass\/postback": {
            "post": {
                "summary": "Postback Service",
                "description": "This is the final step in the transaction and reports the result of their transactions to Masterpass. Postback is required for all transactions (abandoned transactions do not need to be reported). The postback service returns HTTP response code 204 for successful response. Request method: POST. API URL: \/masterpass\/postback\n",
                "operationId": "",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "This is a successful Postback."
                    }
                }
            }
        },
        "\/masterpass\/pairingid": {
            "get": {
                "summary": "PairingId Service",
                "description": "Use this service to get a consumer?s pairing identifier from Masterpass when they choose to share the payment and shipping information from their Masterpass wallet for future use in an Express Checkout. Request method: GET. API URL: \/masterpass\/pairingid\n",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "pairingTransactionId",
                        "in": "query",
                        "description": "Pass the value of the pairing_verifier query string parameter returned in the Masterpass Callback URL."
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "description": "The unique consumer user identifier from the Merchant site."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is a PaymentData response."
                    }
                }
            }
        },
        "\/masterpass\/precheckoutdata\/{pairingId}": {
            "get": {
                "summary": "Pre-Checkout Service",
                "description": "Use the consumer?s pairingID to retrieve their shipping and payment information prior to complete an Express Checkout.  You can use the data returned from this service to confirm the user?s payment selections before completing the checkout. Request method: GET. API URL: \/masterpass\/precheckoutdata\/{pairingId}\n",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "pairingId",
                        "in": "path",
                        "description": "The unique pairingId used to fetch pre-checkout data for a consumer's wallet paired with a merchant."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is a PaymentData response."
                    }
                }
            }
        },
        "\/masterpass\/expresscheckout": {
            "post": {
                "summary": "Express Checkout Service",
                "description": "This service is used to retrieve the consumer's full payment card, shipping address, and recipient personal information from Masterpass when performing an Express Checkout. If the merchant is PCI-compliant, then this API will return the complete payload.  If the merchant is not PCI-compliant, then this API will only return non-PCI data. In both cases, a new pairingId will be returned to the merchant. Request method: POST. API URL: \/masterpass\/expresscheckout\n",
                "operationId": "",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "This is a PaymentData response."
                    }
                }
            }
        },
        "\/masterpass\/psp-paymentdata\/{transactionId}": {
            "get": {
                "summary": "Payment Data Service",
                "description": "Service to request consumer's full payment card information during a checkout. Request method: GET. API URL: \/masterpass\/psp-paymentdata\/{transactionId}\n",
                "operationId": "",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "transactionId",
                        "in": "path",
                        "description": "Identifies the transaction for which to return the consumer?s payment data. This is the oauth_verifier value sent by Masterpass in the callback URL after the Masterpass UI is closed."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "This is a PaymentData response."
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "PSPPaymentData": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "the card details.",
                        "type": ""
                    },
                    "tokenization": {
                        "description": "The tokenized card information. Note tokenization is not available for Express Checkout",
                        "type": ""
                    },
                    "walletId": {
                        "description": "The unique identifier for a wallet that helps identify the origin wallet for the transaction.",
                        "type": "string"
                    },
                    "authenticationOptions": {
                        "description": "The authentication information.",
                        "type": ""
                    }
                }
            },
            "card": {
                "type": "object",
                "properties": {
                    "brandId": {
                        "description": "The card brand id referenced by Masterpass (master, amex, diners, discover, jcb, maestro, visa).",
                        "type": "string"
                    },
                    "brandName": {
                        "description": "The card brand full name (Mastercard, American Express, Diners Club, Discover, JCB, Maestro, Visa).",
                        "type": "string"
                    },
                    "accountNumber": {
                        "description": "The card number, also known as Primary Account Number (PAN)",
                        "type": "string"
                    },
                    "cardHolderName": {
                        "description": "The cardholder's name.",
                        "type": "string"
                    },
                    "expiryMonth": {
                        "description": "The PAN expiration month, returned as a one or two digit integer. Single digit months do not have a leading zero e.g. April = 4",
                        "type": "integer"
                    },
                    "expiryYear": {
                        "description": "The PAN expiration year, returned as a four digit integer",
                        "type": "integer"
                    },
                    "cvc": {
                        "description": "The cardholder's DTVC code, if DTVC is enabled. See the [DSRP and Tokenization](https:\/\/developer.mastercard.com\/page\/masterpass-dsrp-and-tokenization#dsrp-alternative-dynamic-token-verification) documentation for more details.",
                        "type": "string"
                    },
                    "billingAddress": {
                        "description": "Returns the billing address associated with the card.",
                        "type": ""
                    },
                    "lastFour": {
                        "description": "The last four digits of the PAN.",
                        "type": "string"
                    },
                    "cardType": {
                        "description": "the card type (CREDIT\/DEBIT) used in checkout. Available only for Brazilian combo card transactions.",
                        "type": "string"
                    }
                }
            },
            "tokenization": {
                "type": "object",
                "properties": {
                    "fPanSuffix": {
                        "description": "The last digits of the card number. (FPAN) Normally the suffix is the last four digits. ( DEPRECATED - card.lastFour used instead)",
                        "type": "string"
                    },
                    "tokenRequestorId": {
                        "description": "The token requestor id.",
                        "type": "string"
                    },
                    "paymentAccountReference": {
                        "description": "The payment account reference.",
                        "type": "string"
                    },
                    "cryptogram": {
                        "description": "The cryptogram generated by the consumer's Masterpass wallet.",
                        "type": ""
                    }
                }
            },
            "authenticationOptions": {
                "type": "object",
                "properties": {
                    "authenticateMethod": {
                        "description": "The method used to authenticate the cardholder at checkout. Valid values are MERCHANT ONLY, 3DS and NO AUTHENTICATION, Cryptogram",
                        "type": "string"
                    },
                    "cardEnrollmentMethod": {
                        "description": "The method by which the card was added to the wallet. Valid values are: Manual, Direct Provisioned, 3DS Manual, and NFC Tap.",
                        "type": "string"
                    },
                    "cAvv": {
                        "description": "The (CAVV) Cardholder Authentication Verification Value generated by the card issuer upon successful authentication of the cardholder. This must be passed in the authorization message. This parameter is Base64 encoded.",
                        "type": "string"
                    },
                    "eciFlag": {
                        "description": "The Electronic commerce indicator (ECI) flag. Possible values are as follows: Mastercard: 00:No Authentication 01:Attempts (Card Issuer Liability) 02:Authenticated by ACS (Card Issuer Liability) 03:Maestro (MARP) 05:Risk Based Authentication (Card Issuer Liability) 06:Risk Based Authentication (Merchant, not in use) Visa: 05:Authenticated (Card Issuer Liability) 06:Attempts (Card Issuer Liability) 07:No 3DS Authentication (Merchant Liability)",
                        "type": "string"
                    },
                    "masterCardAssignedID": {
                        "description": "The value assigned by Mastercard and represents programs associated directly with Maestro cards. This field should be supplied in the authorization request by the merchant.",
                        "type": "string"
                    },
                    "paResStatus": {
                        "description": "The message formatted, digitally signed, and sent from the ACS (issuer) to the MPI providing the results of the issuer's Mastercard SecureCode\/Verified by Visa cardholder authentication. Possible values are: Y-The card was successfully authenticated via 3-D Secure A-signifies that either (a) the transaction was successfully authenticated via a 3-D Secure attempts transaction or (b)the cardholder was prompted to activate 3-D Secure during shopping but declined (Visa). U-Authentication results were unavailable.",
                        "type": "string"
                    },
                    "scEnrollmentStatus": {
                        "description": "The Mastercard SecureCode Enrollment Status. Indicates if the issuer of the card supports payer authentication for this card. Possible values are as follows: Y-The card is eligible for 3-D Secure authentication. N-The card is not eligible for 3-D Secure authentication. U-Lookup of the card's 3-D Secure eligibility status was either unavailable, or the card is inapplicable (for example, prepaid cards).",
                        "type": "string"
                    },
                    "signatureVerification": {
                        "description": "The signature verification. Possible values are as follows: Y-Indicates that the signature of the PaRes has been validated successfully and the message contents can be trusted. N-Indicates that for a variety of reasons (tampering, certificate expiration, and so on) the PaRes could not be validated, and the result should not be trusted.",
                        "type": "string"
                    },
                    "xid": {
                        "description": "The transaction identifier resulting from authentication processing. This parameter is Base64 encoded.",
                        "type": "string"
                    },
                    "sli": {
                        "description": "the security level indicator resulting from authentication processing for Mastercard Secure code. NOT CURRENTLY IN USE.",
                        "type": "string"
                    },
                    "aav": {
                        "description": "the accountholder authentication value resulting from authentication processing for Mastercard Secure code. NOT CURRENTLY IN USE.",
                        "type": "string"
                    },
                    "cardVerificationStatus": {
                        "description": "The card verification status resulting from authentication processing for Mastercard Secure code. The following values are possible:\n* Y - Authentication successful\n* N - Authentication unsuccessful\n* U - Could not perform authentication\n* A - Attempts processing performed\n* C - Challenge required NOT CURRENTLY IN USE\n",
                        "type": "string"
                    }
                }
            },
            "PaymentData": {
                "type": "object",
                "properties": {
                    "card": {
                        "description": "the card details.",
                        "type": ""
                    },
                    "shippingAddress": {
                        "description": "The shipping address details.",
                        "type": ""
                    },
                    "personalInfo": {
                        "description": "The recipient's personal information.",
                        "type": ""
                    },
                    "tokenization": {
                        "description": "The tokenized card information. Note tokenization is not available for Express Checkout",
                        "type": ""
                    },
                    "walletId": {
                        "description": "The unique identifier for a wallet that helps identify the origin wallet for the transaction.",
                        "type": "string"
                    },
                    "walletName": {
                        "description": "The wallet name.",
                        "type": "string"
                    },
                    "authenticationOptions": {
                        "description": "The authentication information.",
                        "type": ""
                    },
                    "pairingId": {
                        "description": "The new pairingId - only returned for an Express checkout request",
                        "type": "string"
                    },
                    "pspTransactionId": {
                        "description": "the unique transaction ID returned by the PSP. The PSP will determine the format. This parameter is only returned in the PSP push model. Use this parameter when making a payment request using the custom endpoint provided your PSP",
                        "type": "string"
                    }
                }
            },
            "shippingAddress": {
                "type": "object",
                "properties": {
                    "recipientInfo": {
                        "description": "the recipient information.",
                        "type": ""
                    },
                    "addressId": {
                        "description": "the address id.",
                        "type": "string"
                    },
                    "default": {
                        "description": "the default selection.",
                        "type": "boolean"
                    },
                    "city": {
                        "description": "The cardholder's city.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The cardholder's country as defined by ISO 3166-1 alpha-2 country codes.",
                        "type": "string"
                    },
                    "subdivision": {
                        "description": "The cardholder's country's subdivision as defined by ISO 3166-1 alpha-2 code for US, CA, AU, JP, and BR. All other countries use a freeform text field.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "The cardholder?s house number and the street name.",
                        "type": "string"
                    },
                    "line2": {
                        "description": "The cardholder?s apartment number, suite number, etc.",
                        "type": "string"
                    },
                    "line3": {
                        "description": "The cardholder?s remaining address information that does not fit in lines 1 and 2.",
                        "type": "string"
                    },
                    "line4": {
                        "description": "This is only returned for addresses in Brazil, and provides the cardholder?s billing house number. If no data is returned for this field, then reference card?.billingAddress?.line1",
                        "type": "string"
                    },
                    "line5": {
                        "description": "This is only returned for addresses in Brazil, and provides the cardholder?s billing street name. If no data is returned for this field, then reference card?.billingAddress?.line1",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "The cardholder?s postal code or zip code.",
                        "type": "string"
                    }
                }
            },
            "personalInfo": {
                "type": "object",
                "properties": {
                    "recipientName": {
                        "description": "The recipient's name.",
                        "type": "string"
                    },
                    "recipientPhone": {
                        "description": "The recipient's phone number.",
                        "type": "string"
                    },
                    "recipientEmailAddress": {
                        "description": "The recipient's email address.",
                        "type": "string"
                    }
                }
            },
            "billingAddress": {
                "type": "object"
            },
            "Address": {
                "type": "object",
                "properties": {
                    "city": {
                        "description": "The cardholder's city.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The cardholder's country as defined by ISO 3166-1 alpha-2 country codes.",
                        "type": "string"
                    },
                    "subdivision": {
                        "description": "The cardholder's country's subdivision as defined by ISO 3166-1 alpha-2 code for US, CA, AU, JP, and BR. All other countries use a freeform text field.",
                        "type": "string"
                    },
                    "line1": {
                        "description": "The cardholder?s house number and the street name.",
                        "type": "string"
                    },
                    "line2": {
                        "description": "The cardholder?s apartment number, suite number, etc.",
                        "type": "string"
                    },
                    "line3": {
                        "description": "The cardholder?s remaining address information that does not fit in lines 1 and 2.",
                        "type": "string"
                    },
                    "line4": {
                        "description": "This is only returned for addresses in Brazil, and provides the cardholder?s billing house number. If no data is returned for this field, then reference card?.billingAddress?.line1",
                        "type": "string"
                    },
                    "line5": {
                        "description": "This is only returned for addresses in Brazil, and provides the cardholder?s billing street name. If no data is returned for this field, then reference card?.billingAddress?.line1",
                        "type": "string"
                    },
                    "postalCode": {
                        "description": "The cardholder?s postal code or zip code.",
                        "type": "string"
                    }
                }
            },
            "Postback": {
                "type": "object",
                "properties": {
                    "transactionId": {
                        "description": "Identifies the transaction for which to return the consumer?s payment data. For Standard checkout: transactionId is the oauth_verifier value sent by Masterpass in callback URL after the Masterpass user interface is closed. For Express checkout: transactionId is preCheckoutTransactionID used for expresscheckout call.",
                        "type": "string"
                    },
                    "currency": {
                        "description": "The ISO-4217 code for currency of the transaction.",
                        "type": "string"
                    },
                    "amount": {
                        "description": "The transaction amount as a decimal value. Only positive values are permitted",
                        "type": "number"
                    },
                    "paymentSuccessful": {
                        "description": "The payment status indicator from your payment processor (true, false).",
                        "type": "boolean"
                    },
                    "paymentCode": {
                        "description": "The six-digit approval code returned by payment API. Note that if no payment code has been generated - for example if the payment was declined - you should pass the value ?UNAVLB? here. There may also be circumstances where a payment was successful but no payment code is available, in which case ?UNAVLB? should be used here.",
                        "type": "string"
                    },
                    "paymentDate": {
                        "description": "The date of purchase.",
                        "type": "string"
                    },
                    "preCheckoutTransactionId": {
                        "description": "The preCheckoutTransactionId from the ExpressCheckout response.",
                        "type": "string"
                    }
                }
            },
            "cryptogram": {
                "type": "object",
                "properties": {
                    "cryptoValue": {
                        "description": "The cryptogram generated by the consumer's Masterpass wallet",
                        "type": "string"
                    },
                    "cryptoType": {
                        "description": "The type of cryptogram generated by the consumers Masterpass wallet. Masterpass passes the most secure selection (ICC) if the merchant or service provider has indicated they can accept both types (UCAF, ICC).",
                        "type": "string"
                    },
                    "unpredictableNumber": {
                        "description": "The Base64 encoded unpredictable number. EMV quality random number generated by the merchant, service provider, or, Masterpass (if null).",
                        "type": "string"
                    },
                    "eci": {
                        "description": "The electronic commerce indicator (ECI) value (DE 48 SE 42 position 3). Present only when crypto type is UCAF. For Mastercard brand cards, value is: 02 Authenticated by ACS (Card Issuer Liability)",
                        "type": "string"
                    }
                }
            },
            "Pairing": {
                "type": "object",
                "properties": {
                    "pairingId": {
                        "description": "The new pairingId - only returned for an Express checkout request",
                        "type": "string"
                    }
                }
            },
            "ExpressCheckoutRequest": {
                "type": "object",
                "properties": {
                    "checkoutId": {
                        "description": "The merchant Checkout identifier.",
                        "type": "string"
                    },
                    "pairingId": {
                        "description": "The new pairingId - only returned for an Express checkout request",
                        "type": "string"
                    },
                    "preCheckoutTransactionId": {
                        "description": "The preCheckoutTransactionId from the ExpressCheckout response.",
                        "type": "string"
                    },
                    "amount": {
                        "description": "The transaction amount as a decimal value. Only positive values are permitted",
                        "type": "number"
                    },
                    "currency": {
                        "description": "The ISO-4217 code for currency of the transaction.",
                        "type": "string"
                    },
                    "cardId": {
                        "description": "The card identifier from PreCheckout response.",
                        "type": "string"
                    },
                    "shippingAddressId": {
                        "description": "The shippingAddress identifier from PreCheckout response.",
                        "type": "string"
                    },
                    "digitalGoods": {
                        "description": "The flag to indicate digital goods are being purchased so a shipping address is not required for the transaction.",
                        "type": "boolean"
                    },
                    "pspId": {
                        "description": "This is the pspId passed by merchant to select the PSP for pushing payment data. The value for this parameter is the ID value in the Business Profile section of the Merchant's account in the Masterpass portal. Note this parameter is only used for the PSP Push model.",
                        "type": "string"
                    }
                }
            },
            "PreCheckoutData": {
                "type": "object",
                "properties": {
                    "cards": {
                        "description": "The cards in the paired wallet.",
                        "type": "array"
                    },
                    "shippingAddresses": {
                        "description": "the shipping addresses details.",
                        "type": "array"
                    },
                    "contactInfo": {
                        "description": "the contact info details.",
                        "type": ""
                    },
                    "preCheckoutTransactionId": {
                        "description": "The preCheckoutTransactionId from the ExpressCheckout response.",
                        "type": "string"
                    },
                    "consumerWalletId": {
                        "description": "The consumer's wallet id.",
                        "type": "string"
                    },
                    "walletName": {
                        "description": "The wallet name.",
                        "type": "string"
                    },
                    "pairingId": {
                        "description": "The new pairingId - only returned for an Express checkout request",
                        "type": "string"
                    }
                }
            },
            "cards": {
                "type": "array"
            },
            "shippingAddresses": {
                "type": "array"
            },
            "contactInfo": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "description": "The first name associated with the wallet user.",
                        "type": "string"
                    },
                    "lastName": {
                        "description": "The last name associated with the wallet user.",
                        "type": "string"
                    },
                    "country": {
                        "description": "The cardholder's country as defined by ISO 3166-1 alpha-2 country codes.",
                        "type": "string"
                    },
                    "emailAddress": {
                        "description": "The email address associated with the wallet user.",
                        "type": "string"
                    },
                    "phoneNumber": {
                        "description": "The phone number associated with the wallet user.",
                        "type": "string"
                    }
                }
            },
            "RecipientInfo": {
                "type": "object",
                "properties": {
                    "recipientName": {
                        "description": "The recipient's name.",
                        "type": "string"
                    },
                    "recipientPhone": {
                        "description": "The recipient's phone number.",
                        "type": "string"
                    }
                }
            },
            "recipientInfo": {
                "type": "object"
            },
            "PrecheckoutCard": {
                "type": "object",
                "properties": {
                    "brandName": {
                        "description": "The card brand full name (Mastercard, American Express, Diners Club, Discover, JCB, Maestro, Visa).",
                        "type": "string"
                    },
                    "cardHolderName": {
                        "description": "The cardholder's name.",
                        "type": "string"
                    },
                    "cardId": {
                        "description": "The card identifier from PreCheckout response.",
                        "type": "string"
                    },
                    "default": {
                        "description": "the default selection.",
                        "type": "boolean"
                    },
                    "expiryYear": {
                        "description": "The PAN expiration year, returned as a four digit integer",
                        "type": "integer"
                    },
                    "expiryMonth": {
                        "description": "The PAN expiration month, returned as a one or two digit integer. Single digit months do not have a leading zero e.g. April = 4",
                        "type": "integer"
                    },
                    "lastFour": {
                        "description": "The last four digits of the PAN.",
                        "type": "string"
                    }
                }
            },
            "EncryptedPaymentDataResponse": {
                "type": "object",
                "properties": {
                    "encryptedPaymentData": {
                        "description": "The encrypted payment details - see standard paymentdata response for unencrpyted contents. The payment information is encrypted using JSON Web encryption.",
                        "type": "string"
                    }
                }
            }
        }
    }
}